#参考：springboot2.0和springboot2.1 +sharding-jdbc 轻量级读写分离配置，接以前的版本和源码

logging:
  level:
    com.systeminfos.shardingJdbc: debug
    io.shardingjdbc.core: debug
spring:
  main:
    allow-bean-definition-overriding: true

# 所有数据源列表
sharding:
  jdbc:
    dataSource:
      names: db-0,db-1,db-2
      # 配置主库
      db-0:
        type: com.alibaba.druid.pool.DruidDataSource
        driverClassName: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://localhost:3306/shardingjdbc_0?useUnicode=true&characterEncoding=utf8&tinyInt1isBit=false&useSSL=false&serverTimezone=GMT
        username: root
        password: mysqlmysql
        maxPoolSize: 20 #最大连接数
      db-1: # 配置第一个从库
        type: com.alibaba.druid.pool.DruidDataSource
        driverClassName: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://localhost:3306/shardingjdbc_1?useUnicode=true&characterEncoding=UTF-8&allowMultiQueries=true&useSSL=false&serverTimezone=GMT
        username: root
        password: mysqlmysql
        maxPoolSize: 20
      db-2: # 配置第二个从库
        type: com.alibaba.druid.pool.DruidDataSource
        driverClassName: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://localhost:3306/shardingjdbc_2?useUnicode=true&characterEncoding=UTF-8&allowMultiQueries=true&useSSL=false&serverTimezone=GMT
        username: root
        password: mysqlmysql
        maxPoolSize: 20
    config:
      masterslave: # 配置读写分离
        load-balance-algorithm-type: round_robin # 配置从库选择策略，提供轮询与随机，这里选择用轮询//random 随机 //round_robin 轮询
        name: dbs
        master-data-source-name: db-0
        slave-data-source-names: db-1,db-2
    props:
      sql: true # 开启SQL显示，默认值: false，注意：仅配置读写分离时不会打印日志！！！


#自定义分表算法
#sharding.jdbc.config.sharding.tables.user.tableStrategy.standard.sharding-column=name
#sharding.jdbc.config.sharding.tables.user.tableStrategy.standard.preciseAlgorithmClassName=com.demo.shardingjdbc.config.HashPreciseShardingAlgorithm


#spring.shardingsphere.props.sql.show=true
#spring.shardingsphere.props.query.with.cipher.column=true

# MyBatis配置
mybatis:
  type-aliases-package: com.systeminfos.shardingJdbc.model
  mapper-locations: classpath:mapper/*.xml
  configuration:
    cache-enabled: false




